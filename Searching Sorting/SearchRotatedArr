// Search in a rotated sorted array Solution

#include <bits/stdc++.h>

using namespace std;

int search(vector<int>& nums, int target) {
        int l = 0, r = nums.size()-1;
        int mid;
        while(l<=r){
            mid = (l+r)/2;
            if(nums[mid] == target)
                return mid;
            if(nums[mid] >= nums[l])
            {
                if(target >= nums[l] && target < nums[mid])
                    r = mid-1;
                else
                    l = mid + 1;
            }
            else{
                if(target > nums[mid] && target <= nums[r])
                    l = mid + 1;
                else
                    r = mid-1;
            }
        }
        return -1;
}



int main()
{
        int n, i, target;
        cin >> n;
        vector<int> arr;
        int ele;
        for(i=0; i<n; i++){
            cin >> ele;
            arr.push_back(ele);
        }
        cin >> target;
        
        int ans = search(arr, target);
        if (ans == -1) {
            cout << "Not Found";
        } else {
            cout << ans;
        }
        cout << "\n";
    
    return 0;
}
